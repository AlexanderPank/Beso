/****** medapi.h ************ Alexeev  S.A.  ********** 03/11/09 ***
******* medapi.h ************ Tarakanova I.R.********** 25/02/14 ***
******* medapi.h ************ Shabakov D.A.  ********** 03/03/21 ***
*                                                                  *
*              Copyright (c) PANORAMA Group 1991-2021              *
*                      All Rights Reserved                         *
*                                                                  *
********************************************************************
*                                                                  *
*                  FOR  WINDOWS95,98 & WINDOWS NT                  *
*                                                                  *
********************************************************************
*                                                                  *
*             ОПИСАНИЕ ФУНКЦИЙ ВЫБОРА ВИДА ОБЪЕКТА                 *
*        ИНТЕРФЕЙС ДЛЯ ПРОГРАММ НА ЯЗЫКАХ C, PASCAL, BASIC         *
*                                                                  *
*******************************************************************/

#ifndef MEDAPI_H
#define MEDAPI_H

#ifndef GISDLGS_H
  #include "gisdlgs.h"
#endif

#ifndef LISTAPI_H
  #include "listapi.h"
#endif

// Способы построения метрики объекта

#define MC_POLYLINE     5213 // Произвольная линия
#define MC_RECT         5214 // Горизонтальный прямоугольник
#define MC_ROTRECT      5215 // Наклонный прямоугольник
#define MC_POLYRECT     5216 // Многоугольник с прямыми углами
#define MC_FIXCIRCLE    5217 // Окружность фиксированного радиуса
#define MC_VARCIRCLE    5218 // Окружность произвольного радиуса
#define MC_AUTO         5219 // Автомат
#define MC_FROMFILE     5220 // Из файла
#define MC_KEYB         5221 // С клавиатуры
#define MC_TWOSIDE      5222 // Двойная линия (ось по центру)
#define MC_SPLINE1      5223 // Сглаживающий сплайн
#define MC_SPLINE2      5224 // Огибающий сплайн
#define MC_RIGHTSIDE    5225 // Двойная линия (ось слева)
#define MC_THREEPOINT   5226 // Окружность по трем точкам

extern "C"
{
 // Диалог выбора вида объекта из файла ресурсов
 // hmap - идентификатор открытой векторной карты
 // hobj - идентификатор объекта
 // choiceparm - параметры для диалога выбора вида объекта
 // name - заголовок диалога
 // возвращает внутренний код объекта, hobj соответствует
 // выбранной карте и коду объекта
 // при ошибке или отказе возвращает 0

 // Для вызова помощи в диалогах необходимо в структуре
 // TASKPARM установить путь к файлу *.hlp, который
 // содержит топик с идентификатором "6300"

 _LISTIMP long int _LISTAPI medChoiceTypeObjectParm(HMAP hmap, TASKPARM *taskparm,
                                                    HOBJ hobj, CHOICEOBJECTPARM *choiceparm, const char *name);


 // Диалог выбора вида объекта из файла ресурсов
 // hmap - идентификатор открытой векторной карты
 // hobj - идентификатор объекта
 // возвращает внутренний код объекта, hobj соответствует
 // выбранной карте и коду объекта
 // при ошибке или отказе возвращает 0

 // Для вызова помощи в диалогах необходимо в структуре
 // TASKPARM установить путь к файлу *.hlp, который
 // содержит топик с идентификатором "6300"

 _LISTIMP long int _LISTAPI medChoiceTypeObject(HMAP hmap, TASKPARM *taskparm, HOBJ hobj);

 // Диалог выбора вида из файла ресурсов, используя фильтр
 // hmap - идентификатор открытой векторной карты
 // hobj - идентификатор объекта
 // hselect - фильтр
 //           (если hselect == 0 - фильтр не используется)
 //            Если hselect != 0 и в hselect установлена
 //            карта, то диалог работает по одной карте.
 //            Если в hselect карта не установлена, диалог
 //            работает по всем картам документа.
 // name - заголовок диалога
 // возвращает внутренний код объекта, hobj соответствует
 // выбранной карте и коду объекта
 // при ошибке или отказе возвращает 0

 // Для вызова помощи в диалогах необходимо в структуре
 // TASKPARM установить путь к файлу *.hlp, который
 // содержит топик с идентификатором "6300"

 _LISTIMP long int _LISTAPI medChoiceTypeObjectSelect(HMAP hmap, TASKPARM *taskparm, HOBJ hobj, HSELECT hselect, const char *name);


 // Диалог выбора вида линейного графического объекта
 // hmap - идентификатор открытой векторной карты
 // hobj - идентификатор объекта
 // hselect - фильтр
 //           (если hselect == 0 - фильтр не используется)
 //            Если hselect != 0 и в hselect установлена
 //            карта, то диалог работает по одной карте.
 //            Если в hselect карта не установлена, диалог
 //            работает по всем картам документа.
 // name - заголовок диалога
 // При нормальном завершении внутренний код объекта равен 0
 // при ошибке или отказе возвращает 0

 // Для вызова помощи в диалогах необходимо в структуре
 // TASKPARM установить путь к файлу *.hlp, который
 // содержит топик с идентификатором "6709"

 _LISTIMP long int _LISTAPI medChoiceLineImage(HMAP hmap,TASKPARM *taskparm, HOBJ object, HSELECT hselect, const char *name);


 // Диалог выбора вида площадного графического объекта
 // hmap - идентификатор открытой векторной карты
 // hobj - идентификатор объекта
 // hselect - фильтр
 //           (если hselect == 0 - фильтр не используется)
 //            Если hselect != 0 и в hselect установлена
 //            карта, то диалог работает по одной карте.
 //            Если в hselect карта не установлена, диалог
 //            работает по всем картам документа.
 // name - заголовок диалога
 // При нормальном завершении внутренний код объекта равен 0
 // при ошибке или отказе возвращает 0

 // Для вызова помощи в диалогах необходимо в структуре
 // TASKPARM установить путь к файлу *.hlp, который
 // содержит топик с идентификатором "6709"

 _LISTIMP long int _LISTAPI medChoiceSquareImage(HMAP hmap, TASKPARM *taskparm, HOBJ object, HSELECT hselect, const char *name);


 // Диалог выбора вида точечного графического объекта
 // hmap - идентификатор открытой векторной карты
 // hobj - идентификатор объекта
 // hselect - фильтр
 //           (если hselect == 0 - фильтр не используется)
 //            Если hselect != 0 и в hselect установлена
 //            карта, то диалог работает по одной карте.
 //            Если в hselect карта не установлена, диалог
 //            работает по всем картам документа.
 // name - заголовок диалога
 // При нормальном завершении внутренний код объекта равен 0
 // при ошибке или отказе возвращает 0

 // Для вызова помощи в диалогах необходимо в структуре
 // TASKPARM установить путь к файлу *.hlp, который
 // содержит топик с идентификатором "6709"

 _LISTIMP long int _LISTAPI medChoicePointImage(HMAP hmap, TASKPARM *taskparm, HOBJ object, HSELECT hselect, const char *name);


 // Диалог выбора вида графического объекта типа ПОДПИСЬ
 // hmap - идентификатор открытой векторной карты
 // hobj - идентификатор объекта
 // hselect - фильтр
 // (если hselect == 0 - фильтр не используется)
 //           (если hselect == 0 - фильтр не используется)
 //            Если hselect != 0 и в hselect установлена
 //            карта, то диалог работает по одной карте.
 //            Если в hselect карта не установлена, диалог
 //            работает по всем картам документа.
 // name - заголовок диалога
 // При нормальном завершении внутренний код объекта равен 0
 // при ошибке или отказе возвращает 0

 // Для вызова помощи в диалогах необходимо в структуре
 // TASKPARM установить путь к файлу *.hlp, который
 // содержит топик с идентификатором "6709"

 _LISTIMP long int _LISTAPI medChoiceTitleImage(HMAP hmap, TASKPARM *taskparm, HOBJ object, HSELECT hselect, const char *name);

}       // extern "C"

#endif  // MEDAPI_H
