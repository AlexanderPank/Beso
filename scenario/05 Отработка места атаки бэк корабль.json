{
    "algorithms": [
        {
            "description": "Алгоритм фильтра по типу объектов",
            "function": "ModelTasks.filter_by_type",
            "id": "alg_id_filter",
            "input_parameters": [
            ],
            "output_parameters": [
                {
                    "objects": "list",
                    "title": ""
                }
            ],
            "output_splitter": " ",
            "subType": "Общие алгоритмы",
            "title": "Алгоритм фильтра по типу объектов",
            "type": "inner"
        },
        {
            "description": "алгоритма расчета точки встречи С++ ",
            "function": "LIBCPP01.calc_point_single",
            "id": "alg_id_fox_rabbit",
            "input_parameters": [
                {
                    "lat1": "float",
                    "title": ""
                },
                {
                    "lon1": "float",
                    "title": ""
                },
                {
                    "alt1": "float",
                    "title": ""
                },
                {
                    "speed1": "float",
                    "title": ""
                },
                {
                    "lat2": "float",
                    "title": ""
                },
                {
                    "lon2": "float",
                    "title": ""
                },
                {
                    "alt2": "float",
                    "title": ""
                },
                {
                    "speed2": "float",
                    "title": ""
                },
                {
                    "course2": "float",
                    "title": ""
                },
                {
                    "dt": "float",
                    "title": ""
                }
            ],
            "output_parameters": [
                {
                    "_lat": "float",
                    "title": ""
                },
                {
                    "_lon": "float",
                    "title": ""
                },
                {
                    "_alt": "float",
                    "title": ""
                },
                {
                    "_is_caught": "bool",
                    "title": ""
                }
            ],
            "output_splitter": " ",
            "subType": "Поиск маршрута",
            "title": "Алгоритма расчета точки встречи",
            "type": "libcpp"
        },
        {
            "description": "Проверка нахождения объекта в районе ожидания",
            "function": "ModelTasks.object_in_rog",
            "id": "alg_id_object_in_rog",
            "input_parameters": [
            ],
            "output_parameters": [
                {
                    "rog_name": "str",
                    "title": ""
                }
            ],
            "output_splitter": " ",
            "subType": "Общие алгоритмы",
            "title": "Находится  ли объект в РОЖ",
            "type": "inner"
        },
        {
            "description": "Новый",
            "function": "ModelTasks.get_waiting_time",
            "id": "alg_id_get_waiting_time",
            "input_parameters": [
            ],
            "output_parameters": [
                {
                    "time": "float",
                    "title": "время ожидания в секундах"
                }
            ],
            "output_splitter": " ",
            "subType": "Общие алгоритмы",
            "title": "Получение времени ожидания в РОЖ",
            "type": "inner"
        },
        {
            "description": "Получение свойства объекта по его id и имени проперти",
            "function": "ModelTasks.get_object_prop",
            "id": "alg_id_get_object_prop",
            "input_parameters": [
            ],
            "output_parameters": [
                {
                    "result": "any",
                    "title": "Результат"
                }
            ],
            "output_splitter": " ",
            "subType": "Общие алгоритмы",
            "title": "Получение свойства объекта",
            "type": "inner"
        },
        {
            "description": "Установка значения параметра объекта",
            "function": "ModelTasks.set_object_prop",
            "id": "alg_id_set_object_prop",
            "input_parameters": [
            ],
            "output_parameters": [
                {
                    "result": "bool",
                    "title": "результат выполнения операции"
                }
            ],
            "output_splitter": " ",
            "subType": "Общие алгоритмы",
            "title": "Установить значение объекта",
            "type": "inner"
        },
        {
            "description": "Новый",
            "function": "ModelTasks.get_object_by_id",
            "id": "alg_id_get_object_by_id",
            "input_parameters": [
            ],
            "output_parameters": [
                {
                    "result": "any",
                    "title": "Объект или None"
                }
            ],
            "output_splitter": " ",
            "subType": "Общие алгоритмы",
            "title": "Получение объекта по его ID",
            "type": "inner"
        },
        {
            "description": "Новый",
            "function": "ModelTasks.inc_object_prop",
            "id": "alg_id_inc_object_prop",
            "input_parameters": [
            ],
            "output_parameters": [
            ],
            "output_splitter": " ",
            "subType": "Общие алгоритмы",
            "title": "Инкремент свойства объекта",
            "type": "inner"
        },
        {
            "description": "Расчет количество попаданий из АК",
            "function": "ModelTasks.shoot_in_object",
            "id": "alg_id_shoot_in_object",
            "input_parameters": [
            ],
            "output_parameters": [
                {
                    "count": "int",
                    "title": "Кол-во попаданий"
                }
            ],
            "output_splitter": " ",
            "subType": "Общие алгоритмы",
            "title": "Расчет кол-ва поподаний по целе",
            "type": "inner"
        },
        {
            "description": "На основе линейного маршрута получаем маршрут с петлями разворота на концах",
            "function": "ModelTasks.get_bpla_search_path",
            "id": "alg_get_bpla_search_path",
            "input_parameters": [
                {
                    "input_vector": "list",
                    "title": "список координаты зоны разведки"
                },
                {
                    "input_vector": "float",
                    "title": "угол крена БПЛА"
                },
                {
                    "input_vector": "float",
                    "title": "скорость БПЛА"
                }
            ],
            "output_parameters": [
                {
                    "new_geo_path": "list",
                    "title": "Маршрут"
                }
            ],
            "output_splitter": " ",
            "subType": "Расчет маршрута",
            "title": "Расчет маршрута для БПЛА в районе поиска (зоне разведки)",
            "type": "inner"
        },
        {
            "description": "Простой алгоритм движения объекта по заданному маршруту",
            "function": "ModelTasks.move_object_by_path",
            "id": "alg_id_path",
            "input_parameters": [
            ],
            "output_parameters": [
                {
                    "new_course": "float",
                    "title": ""
                },
                {
                    "new_lat": "float",
                    "title": ""
                },
                {
                    "new_lon": "float",
                    "title": ""
                },
                {
                    "new_segment_index": "int",
                    "title": ""
                },
                {
                    "new_state": "str",
                    "title": ""
                }
            ],
            "output_splitter": " ",
            "subType": "Движение",
            "title": "Движения по маршруту",
            "type": "inner"
        },
        {
            "description": "Используется встроенный алгоритм",
            "function": "ModelTasks.find_shortest_path",
            "id": "alg_id_calculate_path",
            "input_parameters": [
                {
                    "ship_lat": "float",
                    "title": ""
                },
                {
                    "ship_lon": "float",
                    "title": ""
                },
                {
                    "target_lat": "float",
                    "title": ""
                },
                {
                    "target_lon": "float",
                    "title": ""
                },
                {
                    "geo_area": "dict",
                    "title": ""
                },
                {
                    "cGeoJsonCloseArea": "str",
                    "title": ""
                },
                {
                    "sPathToDepthMap": "str",
                    "title": ""
                },
                {
                    "distance": "double",
                    "title": ""
                }
            ],
            "output_parameters": [
                {
                    "new_geo_path": "list",
                    "title": ""
                }
            ],
            "output_splitter": " ",
            "subType": "Поиск маршрута",
            "title": "Расчет маршрута по графу видимости",
            "type": "inner"
        },
        {
            "description": "Использует простой алгоритм расчета расстояния между объектами и сравнивает с дальностью обнаружения",
            "function": "LIBCPP04.ifInfraredVisibility",
            "id": "alg_id_detect_thermal_imager",
            "input_parameters": [
                {
                    "dX": "float",
                    "title": ""
                },
                {
                    "dY": "float",
                    "title": ""
                },
                {
                    "dZ": "float",
                    "title": ""
                },
                {
                    "dAlfa": "float",
                    "title": ""
                },
                {
                    "dBetta": "float",
                    "title": ""
                },
                {
                    "dAx": "float",
                    "title": ""
                },
                {
                    "dAy": "float",
                    "title": ""
                },
                {
                    "dAz": "float",
                    "title": ""
                },
                {
                    "iType": "int",
                    "title": ""
                },
                {
                    "dDeltaTmin": "float",
                    "title": ""
                },
                {
                    "df": "float",
                    "title": ""
                },
                {
                    "dsp": "float",
                    "title": ""
                },
                {
                    "iNMx": "int",
                    "title": ""
                },
                {
                    "iNMy": "int",
                    "title": ""
                },
                {
                    "dLmax": "float",
                    "title": ""
                },
                {
                    "iLight": "int",
                    "title": ""
                },
                {
                    "iFrog": "int",
                    "title": ""
                },
                {
                    "dXt": "float",
                    "title": ""
                },
                {
                    "dYt": "float",
                    "title": ""
                },
                {
                    "dZt": "float",
                    "title": ""
                },
                {
                    "dTf": "float",
                    "title": ""
                },
                {
                    "dL": "float",
                    "title": ""
                },
                {
                    "dTc": "float",
                    "title": ""
                },
                {
                    "dW": "float",
                    "title": ""
                },
                {
                    "dH": "float",
                    "title": ""
                }
            ],
            "output_parameters": [
                {
                    "state": "int",
                    "title": ""
                }
            ],
            "output_splitter": " ",
            "subType": "Обнаружение",
            "title": "Алгоритм обнаружения объектов противника на заданном радиусе",
            "type": "libcpp"
        },
        {
            "description": "Детектит вражеский объект в радиусе определенной дистанции.",
            "function": "ModelTasks.detect_enemy",
            "id": "alg_id_detect_enemy",
            "input_parameters": [
            ],
            "output_parameters": [
                {
                    "result": "any",
                    "title": ""
                }
            ],
            "output_splitter": " ",
            "subType": "Общие алгоритмы",
            "title": "Получение id вражеского объекта в радиусе определенной дистанции.",
            "type": "inner"
        },
        {
            "description": "Расчет эффективности поражения пулемётом/АК воздушной/надводной цели",
            "function": "LIBCPP04.GetHitCount",
            "id": "alg_id_calc_effect_air",
            "input_parameters": [
                {
                    "title": "",
                    "weapon_latitude": "float"
                },
                {
                    "title": "",
                    "weapon_longitude": "float"
                },
                {
                    "title": "",
                    "weapon_altitude": "float"
                },
                {
                    "target_latitude": "float",
                    "title": ""
                },
                {
                    "target_longitude": "float",
                    "title": ""
                },
                {
                    "target_altitude": "float",
                    "title": ""
                },
                {
                    "spread_horizontal": "float",
                    "title": ""
                },
                {
                    "spread_vertical": "float",
                    "title": ""
                },
                {
                    "target_width": "float",
                    "title": ""
                },
                {
                    "target_height": "float",
                    "title": ""
                },
                {
                    "bullet_count": "int",
                    "title": ""
                }
            ],
            "output_parameters": [
                {
                    "count": "int",
                    "title": ""
                }
            ],
            "output_splitter": " ",
            "subType": "Поражения",
            "title": "Алгоритм Расчета эффективности поражения (пулеметом или АК)",
            "type": "libcpp"
        },
        {
            "description": "Маневр уклонения - сделать разворот по курсу угрозы чтобы не попасть под удар",
            "function": "ModelTasks.evasive_maneuver",
            "id": "alg_id_evasive_maneuver",
            "input_parameters": [
            ],
            "output_parameters": [
            ],
            "output_splitter": " ",
            "subType": "Маневр",
            "title": "Маневр уклонения - бегство",
            "type": "inner"
        },
        {
            "description": "Использует питоновску обертку и вызывает с++ функцию из либины",
            "function": "ModelTasks.targeting",
            "id": "alg_id_targeting",
            "input_parameters": [
            ],
            "output_parameters": [
            ],
            "output_splitter": " ",
            "subType": "",
            "title": "Алгоритм целераспределения",
            "type": "inner"
        },
        {
            "description": "Новый",
            "function": "ModelTasks.look_detection",
            "id": "alg_id_look_detection",
            "input_parameters": [
            ],
            "output_parameters": [
                {
                    "is_look": "any",
                    "title": ""
                }
            ],
            "output_splitter": " ",
            "subType": "Обнаружение",
            "title": "Алгоритм обнаружения объектов противника",
            "type": "inner"
        },
        {
            "description": "Новый",
            "function": "ModelTasks.check_destroyed",
            "id": "alg_id_check_destroyed",
            "input_parameters": [
            ],
            "output_parameters": [
                {
                    "is_look": "bool",
                    "title": ""
                }
            ],
            "output_splitter": " ",
            "subType": "Обнаружение",
            "title": "Провека уничтожения объекта",
            "type": "inner"
        },
        {
            "description": "Построение маршрута с переменным курсом",
            "function": "ModelTasks.get_variable_path",
            "id": "alg_get_variable_path",
            "input_parameters": [
                {
                    "coordinates": "list",
                    "title": ""
                }
            ],
            "output_parameters": [
                {
                    "coordinates": "list",
                    "title": ""
                }
            ],
            "output_splitter": " ",
            "subType": "Поиск маршрута",
            "title": "Построение маршрута с переменным курсом",
            "type": "inner"
        },
        {
            "description": "Обновление состояния наличия свзи между двумя объектами",
            "function": "CommunicationModel.update_link_status",
            "id": "ald_id_update_link_status",
            "input_parameters": [
                {
                    "id_t": "str",
                    "title": "id объекта, который передает сообщение"
                },
                {
                    "id_r": "str",
                    "title": "id объекта, которому передается сообщение"
                },
                {
                    "rain_intensive": "float",
                    "title": "мощность осадков"
                },
                {
                    "title": "мощность передатчика",
                    "watt_t": "float"
                },
                {
                    "gt_lin": "float",
                    "title": "усиление передатчика"
                },
                {
                    "gr_lin": "float",
                    "title": "усиление приемника"
                },
                {
                    "freq_khz": "float",
                    "title": "частота передачи"
                },
                {
                    "bandwidth_khz": "float",
                    "title": "ширина полосы приема"
                },
                {
                    "noise_figure_db": "float",
                    "title": "шумовой коэффициент приемника (дБ)"
                },
                {
                    "dt_model_s": "float",
                    "title": "время моделирования"
                },
                {
                    "dt_message_s": "float",
                    "title": "время передачи сообщения"
                }
            ],
            "output_parameters": [
                {
                    "is_active": "float",
                    "title": "Возвращает результат установлена связь или нет"
                }
            ],
            "output_splitter": " ",
            "subType": "Связь",
            "title": "Обновление линии связи",
            "type": "inner"
        },
        {
            "description": "Одноноправленное отправление сообщения",
            "function": "CommunicationModel.send_message",
            "id": "ald_id_send_message",
            "input_parameters": [
                {
                    "sender_id": "str",
                    "title": "id отправителя"
                },
                {
                    "receiver_id": "str",
                    "title": "id получателя"
                },
                {
                    "data": "any",
                    "title": "словарь типа {\"type\", \"content\"}"
                },
                {
                    "current_time": "int",
                    "title": "текущее время моделирования"
                },
                {
                    "delay": "int",
                    "title": "задержа в передаче"
                }
            ],
            "output_parameters": [
                {
                    "is_send": "bool",
                    "title": "сообщение отправлено если есть связь"
                }
            ],
            "output_splitter": " ",
            "subType": "Связь",
            "title": "Отправка сообщения",
            "type": "inner"
        },
        {
            "description": "Проверка наличия новых сообщений у объекта",
            "function": "CommunicationModel.process_messages",
            "id": "ald_id_process_messages",
            "input_parameters": [
                {
                    "receiver_id": "str",
                    "title": "Получатель сообщения"
                },
                {
                    "current_time": "int",
                    "title": "Текущее время моделирования"
                }
            ],
            "output_parameters": [
                {
                    "list": "list",
                    "title": "список сообщений"
                }
            ],
            "output_splitter": " ",
            "subType": "Связь",
            "title": "Прием сообщения",
            "type": "inner"
        },
        {
            "description": "Получает перечень линий связи между объектами",
            "function": "CommunicationModel.get_line_list",
            "id": "ald_id_get_line_list",
            "input_parameters": [
            ],
            "output_parameters": [
                {
                    "list": "list",
                    "title": "Перечень линий связи"
                }
            ],
            "output_splitter": " ",
            "subType": "Связь",
            "title": "Список соединений",
            "type": "inner"
        },
        {
            "description": "Проверяет есть ли у объекта новые сообщения",
            "function": "CommunicationModel.has_messages",
            "id": "ald_id_has_messages",
            "input_parameters": [
                {
                    "receiver_id": "str",
                    "title": "ID объекта который проверяет наличие сообщений"
                },
                {
                    "current_time": "int",
                    "title": "Время моделирования"
                }
            ],
            "output_parameters": [
                {
                    "has": "bool",
                    "title": "наличие сообщений"
                }
            ],
            "output_splitter": " ",
            "subType": "Связь",
            "title": "Проверка наличия сообщений",
            "type": "inner"
        },
        {
            "description": "Функция отображает мигающую линию связи",
            "function": "CommunicationModel.draw_line",
            "id": "ald_id_draw_line",
            "input_parameters": [
                {
                    "sender": "any",
                    "title": "объект, инициатор связи"
                },
                {
                    "receiver": "any",
                    "title": "объект, приемник"
                },
                {
                    "feature_type": "str",
                    "title": "тип линии связи из БД СиСР"
                },
                {
                    "features": "list",
                    "title": "общий список тактических знаков"
                },
                {
                    "link_status": "bool",
                    "title": "Состояние связи"
                }
            ],
            "output_parameters": [
            ],
            "output_splitter": " ",
            "subType": "Связь",
            "title": "Отображение линии связи",
            "type": "inner"
        }
    ],
    "classes": [
    ],
    "features": [
        {
            "class_code": "111025000321",
            "color": "base",
            "coordinates": [
                [
                    43.65225672511861,
                    39.5651638429684,
                    0
                ],
                [
                    43.60500719665322,
                    39.623939400405995,
                    0
                ],
                [
                    43.60500719665322,
                    39.623939400405995,
                    0
                ]
            ],
            "description": "Наностится n-точками.",
            "geometry_type": 2,
            "icon": "tactical_signs/white_destination_point.png",
            "id": "DIRECTION_OF_MOVEMENT_1",
            "is_own": 1,
            "line_width": 0.30000001192092896,
            "parent_object_id": "SHIP_ROGOV_1",
            "position": 0,
            "properties": [
            ],
            "scale": 100,
            "scheme": "tactical_signs/white_destination_point.png",
            "short_name": "Напр. движения",
            "spline": false,
            "title": "Направление движения",
            "type": "DIRECTION_OF_MOVEMENT"
        }
    ],
    "files": [
        {
            "file_name": "fox-rabbit.so",
            "id": "LIBCPP01",
            "md5_hash": "698d51a19d8a121ce581499d7b701668",
            "type": "libcpp"
        },
        {
            "file_name": "libcalcsea.so.1.0.1",
            "id": "LIBCPP04",
            "md5_hash": "698d51a19d8a121ce581499d7b701668",
            "type": "libcpp"
        }
    ],
    "interactions": [
        {
            "id": "",
            "interaction_type": "moving",
            "response_action": "",
            "response_set_values": "SHIP_ROGOV_1.properties['damage_state']='destroyed'",
            "source_object_id": "!BEK!",
            "title": "Объект уничтожен",
            "trigger_condition": "SHIP_ROGOV_1.properties['state'] == 'destroyed' and SHIP_ROGOV_1.properties['damage_state'] != 'destroyed'"
        },
        {
            "id": "",
            "interaction_type": "moving",
            "response_action": "",
            "response_set_values": "BEK_MIKOLA_1.properties['trigger_time'] = 0;",
            "source_object_id": "BEK_MIKOLA_1",
            "title": "Инициализация объекта моделирования",
            "trigger_condition": "'trigger_time' not in BEK_MIKOLA_1.properties"
        },
        {
            "id": "",
            "interaction_type": "moving",
            "response_action": "",
            "response_set_values": "",
            "source_object_id": "BEK_MIKOLA_1",
            "title": "Недопустимые метеоусловия для плавания",
            "trigger_condition": "WEATHER.properties['storm_state'] > BEK_MIKOLA_1.properties['max_excitement']"
        },
        {
            "id": "",
            "interaction_type": "moving",
            "response_action": "",
            "response_set_values": "BEK_MIKOLA_1.properties['state'] = 'destroyed'; BEK_MIKOLA_1.properties['target'] = ''; BEK_MIKOLA_1.properties['geo_path']['geometry']['coordinates'] = []",
            "source_object_id": "BEK_MIKOLA_1",
            "title": "Обнаружено критическое повреждение от АК",
            "trigger_condition": "BEK_MIKOLA_1.properties['hit_count'] >= BEK_MIKOLA_1.properties['max_hit_count'] and BEK_MIKOLA_1.properties['state'] in ['moving','standing','waiting','finished', 'attacking']"
        },
        {
            "id": "",
            "interaction_type": "moving",
            "response_action": "",
            "response_set_values": "BEK_MIKOLA_1.properties['state'] = 'waiting'; BEK_MIKOLA_1.properties['segment_index'] = -1; BEK_MIKOLA_1.properties['geo_path']['geometry']['coordinates'] = []; BEK_MIKOLA_1.properties['waiting_time'] = Model_00.actions.get_waiting_time(item=BEK_MIKOLA_1, geo_area=Model_00.actions.filter_by_type(objects=self.features, obj_type=\"WAITING_REGION\")); ",
            "source_object_id": "BEK_MIKOLA_1",
            "title": "Прибытие в РОЖ",
            "trigger_condition": "BEK_MIKOLA_1.properties['state'] in ['finished'] and BEK_MIKOLA_1.properties['target'] == '' and Model_00.actions.object_in_rog(item=BEK_MIKOLA_1, geo_area=Model_00.actions.filter_by_type(objects=self.features, obj_type=\"WAITING_REGION\")) != '' "
        },
        {
            "id": "",
            "interaction_type": "waiting",
            "response_action": "",
            "response_set_values": "",
            "source_object_id": "BEK_MIKOLA_1",
            "title": "Ожидание в РОЖ",
            "trigger_condition": "BEK_MIKOLA_1.properties['state'] == 'waiting' and self.iteration_time < BEK_MIKOLA_1.properties['waiting_time']"
        },
        {
            "id": "",
            "interaction_type": "search",
            "response_action": "Model_00.actions.fox_rabbit(lat1=BEK_MIKOLA_1.properties['lat'], lon1=BEK_MIKOLA_1.properties['lon'], alt1=BEK_MIKOLA_1.properties['alt'], speed1=BEK_MIKOLA_1.properties['attack_speed'], lat2=SHIP_ROGOV_1.properties['lat'], lon2=SHIP_ROGOV_1.properties['lon'], alt2=SHIP_ROGOV_1.properties['alt'], speed2=SHIP_ROGOV_1.properties['speed'], course2=SHIP_ROGOV_1.properties['course'], dt=100.0) and BEK_MIKOLA_1.properties['geo_path']['geometry']['coordinates'] = BEK_MIKOLA_1.actions.find_path(ship_lat=BEK_MIKOLA_1.properties['lat'], ship_lon=BEK_MIKOLA_1.properties['lon'], target_lat=Model_00.properties['lat'], target_lon=Model_00.properties['lon'], geo_area=Model_00.actions.filter_by_type(objects=self.features, obj_type=\"RESTRICTED_AREA\"))",
            "response_set_values": "BEK_MIKOLA_1.properties['state'] = 'attacking'; BEK_MIKOLA_1.properties['target'] = 'SHIP_ROGOV_1';",
            "source_object_id": "BEK_MIKOLA_1",
            "title": "Цель обнаружена, расчет точки встречи и вычисление маршрута",
            "trigger_condition": "BEK_MIKOLA_1.properties['state'] in ['waiting', 'standing'] and self.iteration_time >=BEK_MIKOLA_1.properties['waiting_time'] and BEK_MIKOLA_1.actions.look_detection(item1=BEK_MIKOLA_1, item2=SHIP_ROGOV_1,  rain=WEATHER.properties['rain_intensive'], frog=WEATHER.properties['frog_intensive'], max_distance=BEK_MIKOLA_1.properties['detection_distance'])"
        },
        {
            "id": "",
            "interaction_type": "check_destroyed",
            "response_action": "",
            "response_set_values": "BEK_MIKOLA_1.properties['state'] = 'destroyed'",
            "source_object_id": "BEK_MIKOLA_1",
            "title": "Цель уничтожена",
            "trigger_condition": "BEK_MIKOLA_1.properties['state'] == 'attacking'  and  BEK_MIKOLA_1.properties['target'] != '' and BEK_MIKOLA_1.actions.check_destroyed(objects=self.objects,  attacker=BEK_MIKOLA_1, target=BEK_MIKOLA_1.properties['target'], min_distance=5, probability=BEK_MIKOLA_1.properties['probability']) and SHIP_ROGOV_1.properties['state'] in ['destroyed']"
        },
        {
            "id": "",
            "interaction_type": "check_destroyed",
            "response_action": "",
            "response_set_values": "BEK_MIKOLA_1.properties['state'] = 'destroyed_bek'",
            "source_object_id": "BEK_MIKOLA_1",
            "title": "БЭК уничтожен",
            "trigger_condition": "BEK_MIKOLA_1.properties['state'] in ['destroyed']"
        },
        {
            "id": "",
            "interaction_type": "search",
            "response_action": "Model_00.actions.fox_rabbit(lat1=BEK_MIKOLA_1.properties['lat'], lon1=BEK_MIKOLA_1.properties['lon'], alt1=BEK_MIKOLA_1.properties['alt'], speed1=BEK_MIKOLA_1.properties['attack_speed'], lat2=SHIP_ROGOV_1.properties['lat'], lon2=SHIP_ROGOV_1.properties['lon'], alt2=SHIP_ROGOV_1.properties['alt'], speed2=SHIP_ROGOV_1.properties['speed'], course2=SHIP_ROGOV_1.properties['course'], dt=100.0) and BEK_MIKOLA_1.properties['geo_path']['geometry']['coordinates'] = BEK_MIKOLA_1.actions.find_path(ship_lat=BEK_MIKOLA_1.properties['lat'], ship_lon=BEK_MIKOLA_1.properties['lon'], target_lat=Model_00.properties['lat'], target_lon=Model_00.properties['lon'], geo_area=Model_00.actions.filter_by_type(objects=self.features, obj_type=\"RESTRICTED_AREA\"));",
            "response_set_values": "",
            "source_object_id": "BEK_MIKOLA_1",
            "title": "Цель обнаружена, расчет точки встречи и вычисление маршрута",
            "trigger_condition": "BEK_MIKOLA_1.properties['state'] in ['finished', 'attacking'] and BEK_MIKOLA_1.properties['target'] != '' and self.iteration_time > BEK_MIKOLA_1.properties['trigger_time']  and BEK_MIKOLA_1.actions.look_detection(item1=BEK_MIKOLA_1, item2=SHIP_ROGOV_1,  rain=WEATHER.properties['rain_intensive'], frog=WEATHER.properties['frog_intensive'], max_distance=BEK_MIKOLA_1.properties['detection_distance'])"
        },
        {
            "id": "",
            "interaction_type": "search",
            "response_action": "",
            "response_set_values": "BEK_MIKOLA_1.properties['trigger_time'] = self.iteration_time + 10; BEK_MIKOLA_1.properties['state'] = 'attacking'; BEK_MIKOLA_1.properties['target'] = 'SHIP_ROGOV_1'; BEK_MIKOLA_1.properties['segment_index'] = 0; BEK_MIKOLA_1.properties['speed'] = BEK_MIKOLA_1.properties['attack_speed'];BEK_MIKOLA_1.properties['geo_path']['geometry']['coordinates'] = BEK_MIKOLA_1.actions.get_variable_path(coordinates=BEK_MIKOLA_1.properties['geo_path']['geometry']['coordinates']); ",
            "source_object_id": "BEK_MIKOLA_1",
            "title": "Построение маршрута с переменным курсом ",
            "trigger_condition": "BEK_MIKOLA_1.properties['state'] in ['finished', 'attacking'] and BEK_MIKOLA_1.properties['target'] != '' and self.iteration_time > BEK_MIKOLA_1.properties['trigger_time']  and BEK_MIKOLA_1.actions.look_detection(item1=BEK_MIKOLA_1, item2=SHIP_ROGOV_1,  rain=WEATHER.properties['rain_intensive'], frog=WEATHER.properties['frog_intensive'], max_distance=BEK_MIKOLA_1.properties['detection_distance'])"
        },
        {
            "id": "",
            "interaction_type": "moving",
            "response_action": "BEK_MIKOLA_1.actions.move(item=BEK_MIKOLA_1,  path=BEK_MIKOLA_1.properties['geo_path'],  time_in_seconds=self.second_in_iteration)",
            "response_set_values": "",
            "source_object_id": "BEK_MIKOLA_1",
            "title": "Движение по маршруту",
            "trigger_condition": "len(BEK_MIKOLA_1.properties['geo_path']['geometry']['coordinates']) > 0 and BEK_MIKOLA_1.properties['state'] in ['moving', 'attacking'] and WEATHER.properties['storm_state'] <= BEK_MIKOLA_1.properties['max_excitement']"
        },
        {
            "id": "",
            "interaction_type": "moving",
            "response_action": "",
            "response_set_values": "BEK_MIKOLA_2.properties['trigger_time'] = 0;",
            "source_object_id": "BEK_MIKOLA_2",
            "title": "Инициализация объекта моделирования",
            "trigger_condition": "'trigger_time' not in BEK_MIKOLA_2.properties"
        },
        {
            "id": "",
            "interaction_type": "moving",
            "response_action": "",
            "response_set_values": "",
            "source_object_id": "BEK_MIKOLA_2",
            "title": "Недопустимые метеоусловия для плавания",
            "trigger_condition": "WEATHER.properties['storm_state'] > BEK_MIKOLA_2.properties['max_excitement']"
        },
        {
            "id": "",
            "interaction_type": "moving",
            "response_action": "",
            "response_set_values": "BEK_MIKOLA_2.properties['state'] = 'destroyed'; BEK_MIKOLA_2.properties['target'] = ''; BEK_MIKOLA_2.properties['geo_path']['geometry']['coordinates'] = []",
            "source_object_id": "BEK_MIKOLA_2",
            "title": "Обнаружено критическое повреждение от АК",
            "trigger_condition": "BEK_MIKOLA_2.properties['hit_count'] >= BEK_MIKOLA_2.properties['max_hit_count'] and BEK_MIKOLA_2.properties['state'] in ['moving','standing','waiting','finished', 'attacking']"
        },
        {
            "id": "",
            "interaction_type": "moving",
            "response_action": "",
            "response_set_values": "BEK_MIKOLA_2.properties['state'] = 'waiting'; BEK_MIKOLA_2.properties['segment_index'] = -1; BEK_MIKOLA_2.properties['geo_path']['geometry']['coordinates'] = []; BEK_MIKOLA_2.properties['waiting_time'] = Model_00.actions.get_waiting_time(item=BEK_MIKOLA_2, geo_area=Model_00.actions.filter_by_type(objects=self.features, obj_type=\"WAITING_REGION\")); ",
            "source_object_id": "BEK_MIKOLA_2",
            "title": "Прибытие в РОЖ",
            "trigger_condition": "BEK_MIKOLA_2.properties['state'] in ['finished'] and BEK_MIKOLA_2.properties['target'] == '' and Model_00.actions.object_in_rog(item=BEK_MIKOLA_2, geo_area=Model_00.actions.filter_by_type(objects=self.features, obj_type=\"WAITING_REGION\")) != '' "
        },
        {
            "id": "",
            "interaction_type": "waiting",
            "response_action": "",
            "response_set_values": "",
            "source_object_id": "BEK_MIKOLA_2",
            "title": "Ожидание в РОЖ",
            "trigger_condition": "BEK_MIKOLA_2.properties['state'] == 'waiting' and self.iteration_time < BEK_MIKOLA_2.properties['waiting_time']"
        },
        {
            "id": "",
            "interaction_type": "search",
            "response_action": "Model_00.actions.fox_rabbit(lat1=BEK_MIKOLA_2.properties['lat'], lon1=BEK_MIKOLA_2.properties['lon'], alt1=BEK_MIKOLA_2.properties['alt'], speed1=BEK_MIKOLA_2.properties['attack_speed'], lat2=SHIP_ROGOV_1.properties['lat'], lon2=SHIP_ROGOV_1.properties['lon'], alt2=SHIP_ROGOV_1.properties['alt'], speed2=SHIP_ROGOV_1.properties['speed'], course2=SHIP_ROGOV_1.properties['course'], dt=100.0) and BEK_MIKOLA_2.properties['geo_path']['geometry']['coordinates'] = BEK_MIKOLA_2.actions.find_path(ship_lat=BEK_MIKOLA_2.properties['lat'], ship_lon=BEK_MIKOLA_2.properties['lon'], target_lat=Model_00.properties['lat'], target_lon=Model_00.properties['lon'], geo_area=Model_00.actions.filter_by_type(objects=self.features, obj_type=\"RESTRICTED_AREA\"))",
            "response_set_values": "BEK_MIKOLA_2.properties['state'] = 'attacking'; BEK_MIKOLA_2.properties['target'] = 'SHIP_ROGOV_1';",
            "source_object_id": "BEK_MIKOLA_2",
            "title": "Цель обнаружена, расчет точки встречи и вычисление маршрута",
            "trigger_condition": "BEK_MIKOLA_2.properties['state'] in ['waiting', 'standing'] and self.iteration_time >=BEK_MIKOLA_2.properties['waiting_time'] and BEK_MIKOLA_2.actions.look_detection(item1=BEK_MIKOLA_2, item2=SHIP_ROGOV_1,  rain=WEATHER.properties['rain_intensive'], frog=WEATHER.properties['frog_intensive'], max_distance=BEK_MIKOLA_2.properties['detection_distance'])"
        },
        {
            "id": "",
            "interaction_type": "check_destroyed",
            "response_action": "",
            "response_set_values": "BEK_MIKOLA_2.properties['state'] = 'destroyed'",
            "source_object_id": "BEK_MIKOLA_2",
            "title": "Цель уничтожена",
            "trigger_condition": "BEK_MIKOLA_2.properties['state'] == 'attacking'  and  BEK_MIKOLA_2.properties['target'] != '' and BEK_MIKOLA_2.actions.check_destroyed(objects=self.objects,  attacker=BEK_MIKOLA_2, target=BEK_MIKOLA_2.properties['target'], min_distance=5, probability=BEK_MIKOLA_2.properties['probability'], time_in_seconds=self.second_in_iteration) and SHIP_ROGOV_1.properties['state'] in ['destroyed']"
        },
        {
            "id": "",
            "interaction_type": "check_destroyed",
            "response_action": "",
            "response_set_values": "BEK_MIKOLA_2.properties['state'] = 'destroyed_bek'",
            "source_object_id": "BEK_MIKOLA_2",
            "title": "БЭК уничтожен",
            "trigger_condition": "BEK_MIKOLA_2.properties['state'] in ['destroyed']"
        },
        {
            "id": "",
            "interaction_type": "search",
            "response_action": "Model_00.actions.fox_rabbit(lat1=BEK_MIKOLA_2.properties['lat'], lon1=BEK_MIKOLA_2.properties['lon'], alt1=BEK_MIKOLA_2.properties['alt'], speed1=BEK_MIKOLA_2.properties['attack_speed'], lat2=SHIP_ROGOV_1.properties['lat'], lon2=SHIP_ROGOV_1.properties['lon'], alt2=SHIP_ROGOV_1.properties['alt'], speed2=SHIP_ROGOV_1.properties['speed'], course2=SHIP_ROGOV_1.properties['course'], dt=100.0) and BEK_MIKOLA_2.properties['geo_path']['geometry']['coordinates'] = BEK_MIKOLA_2.actions.find_path(ship_lat=BEK_MIKOLA_2.properties['lat'], ship_lon=BEK_MIKOLA_2.properties['lon'], target_lat=Model_00.properties['lat'], target_lon=Model_00.properties['lon'], geo_area=Model_00.actions.filter_by_type(objects=self.features, obj_type=\"RESTRICTED_AREA\"));",
            "response_set_values": "",
            "source_object_id": "BEK_MIKOLA_2",
            "title": "Цель обнаружена, расчет точки встречи и вычисление маршрута",
            "trigger_condition": "BEK_MIKOLA_2.properties['state'] in ['finished', 'attacking'] and BEK_MIKOLA_2.properties['target'] != '' and self.iteration_time > BEK_MIKOLA_2.properties['trigger_time']  and BEK_MIKOLA_2.actions.look_detection(item1=BEK_MIKOLA_2, item2=SHIP_ROGOV_1,  rain=WEATHER.properties['rain_intensive'], frog=WEATHER.properties['frog_intensive'], max_distance=BEK_MIKOLA_2.properties['detection_distance'])"
        },
        {
            "id": "",
            "interaction_type": "search",
            "response_action": "",
            "response_set_values": "BEK_MIKOLA_2.properties['trigger_time'] = self.iteration_time + 10; BEK_MIKOLA_2.properties['state'] = 'attacking'; BEK_MIKOLA_2.properties['target'] = 'SHIP_ROGOV_1'; BEK_MIKOLA_2.properties['segment_index'] = 0; BEK_MIKOLA_2.properties['speed'] = BEK_MIKOLA_2.properties['attack_speed'];BEK_MIKOLA_2.properties['geo_path']['geometry']['coordinates'] = BEK_MIKOLA_2.actions.get_variable_path(coordinates=BEK_MIKOLA_2.properties['geo_path']['geometry']['coordinates']); ",
            "source_object_id": "BEK_MIKOLA_2",
            "title": "Построение маршрута с переменным курсом ",
            "trigger_condition": "BEK_MIKOLA_2.properties['state'] in ['finished', 'attacking'] and BEK_MIKOLA_2.properties['target'] != '' and self.iteration_time > BEK_MIKOLA_2.properties['trigger_time']  and BEK_MIKOLA_2.actions.look_detection(item1=BEK_MIKOLA_2, item2=SHIP_ROGOV_1,  rain=WEATHER.properties['rain_intensive'], frog=WEATHER.properties['frog_intensive'], max_distance=BEK_MIKOLA_2.properties['detection_distance'])"
        },
        {
            "id": "",
            "interaction_type": "moving",
            "response_action": "BEK_MIKOLA_2.actions.move(item=BEK_MIKOLA_2,  path=BEK_MIKOLA_2.properties['geo_path'],  time_in_seconds=self.second_in_iteration)",
            "response_set_values": "",
            "source_object_id": "BEK_MIKOLA_2",
            "title": "Движение по маршруту",
            "trigger_condition": "len(BEK_MIKOLA_2.properties['geo_path']['geometry']['coordinates']) > 0 and BEK_MIKOLA_2.properties['state'] in ['moving', 'attacking'] and WEATHER.properties['storm_state'] <= BEK_MIKOLA_2.properties['max_excitement']"
        },
        {
            "id": "",
            "interaction_type": "moving",
            "response_action": "",
            "response_set_values": "BEK_MIKOLA_3.properties['trigger_time'] = 0;",
            "source_object_id": "BEK_MIKOLA_3",
            "title": "Инициализация объекта моделирования",
            "trigger_condition": "'trigger_time' not in BEK_MIKOLA_3.properties"
        },
        {
            "id": "",
            "interaction_type": "moving",
            "response_action": "",
            "response_set_values": "",
            "source_object_id": "BEK_MIKOLA_3",
            "title": "Недопустимые метеоусловия для плавания",
            "trigger_condition": "WEATHER.properties['storm_state'] > BEK_MIKOLA_3.properties['max_excitement']"
        },
        {
            "id": "",
            "interaction_type": "moving",
            "response_action": "",
            "response_set_values": "BEK_MIKOLA_3.properties['state'] = 'destroyed'; BEK_MIKOLA_3.properties['target'] = ''; BEK_MIKOLA_3.properties['geo_path']['geometry']['coordinates'] = []",
            "source_object_id": "BEK_MIKOLA_3",
            "title": "Обнаружено критическое повреждение от АК",
            "trigger_condition": "BEK_MIKOLA_3.properties['hit_count'] >= BEK_MIKOLA_3.properties['max_hit_count'] and BEK_MIKOLA_3.properties['state'] in ['moving','standing','waiting','finished', 'attacking']"
        },
        {
            "id": "",
            "interaction_type": "moving",
            "response_action": "",
            "response_set_values": "BEK_MIKOLA_3.properties['state'] = 'waiting'; BEK_MIKOLA_3.properties['segment_index'] = -1; BEK_MIKOLA_3.properties['geo_path']['geometry']['coordinates'] = []; BEK_MIKOLA_3.properties['waiting_time'] = Model_00.actions.get_waiting_time(item=BEK_MIKOLA_3, geo_area=Model_00.actions.filter_by_type(objects=self.features, obj_type=\"WAITING_REGION\")); ",
            "source_object_id": "BEK_MIKOLA_3",
            "title": "Прибытие в РОЖ",
            "trigger_condition": "BEK_MIKOLA_3.properties['state'] in ['finished'] and BEK_MIKOLA_3.properties['target'] == '' and Model_00.actions.object_in_rog(item=BEK_MIKOLA_3, geo_area=Model_00.actions.filter_by_type(objects=self.features, obj_type=\"WAITING_REGION\")) != '' "
        },
        {
            "id": "",
            "interaction_type": "waiting",
            "response_action": "",
            "response_set_values": "",
            "source_object_id": "BEK_MIKOLA_3",
            "title": "Ожидание в РОЖ",
            "trigger_condition": "BEK_MIKOLA_3.properties['state'] == 'waiting' and self.iteration_time < BEK_MIKOLA_3.properties['waiting_time']"
        },
        {
            "id": "",
            "interaction_type": "search",
            "response_action": "Model_00.actions.fox_rabbit(lat1=BEK_MIKOLA_3.properties['lat'], lon1=BEK_MIKOLA_3.properties['lon'], alt1=BEK_MIKOLA_3.properties['alt'], speed1=BEK_MIKOLA_3.properties['attack_speed'], lat2=SHIP_ROGOV_1.properties['lat'], lon2=SHIP_ROGOV_1.properties['lon'], alt2=SHIP_ROGOV_1.properties['alt'], speed2=SHIP_ROGOV_1.properties['speed'], course2=SHIP_ROGOV_1.properties['course'], dt=100.0) and BEK_MIKOLA_3.properties['geo_path']['geometry']['coordinates'] = BEK_MIKOLA_3.actions.find_path(ship_lat=BEK_MIKOLA_3.properties['lat'], ship_lon=BEK_MIKOLA_3.properties['lon'], target_lat=Model_00.properties['lat'], target_lon=Model_00.properties['lon'], geo_area=Model_00.actions.filter_by_type(objects=self.features, obj_type=\"RESTRICTED_AREA\"))",
            "response_set_values": "BEK_MIKOLA_3.properties['state'] = 'attacking'; BEK_MIKOLA_3.properties['target'] = 'SHIP_ROGOV_1';",
            "source_object_id": "BEK_MIKOLA_3",
            "title": "Цель обнаружена, расчет точки встречи и вычисление маршрута",
            "trigger_condition": "BEK_MIKOLA_3.properties['state'] in ['waiting', 'standing'] and self.iteration_time >=BEK_MIKOLA_3.properties['waiting_time'] and BEK_MIKOLA_3.actions.look_detection(item1=BEK_MIKOLA_3, item2=SHIP_ROGOV_1,  rain=WEATHER.properties['rain_intensive'], frog=WEATHER.properties['frog_intensive'], max_distance=BEK_MIKOLA_3.properties['detection_distance'])"
        },
        {
            "id": "",
            "interaction_type": "check_destroyed",
            "response_action": "",
            "response_set_values": "BEK_MIKOLA_3.properties['state'] = 'destroyed'",
            "source_object_id": "BEK_MIKOLA_3",
            "title": "Цель уничтожена",
            "trigger_condition": "BEK_MIKOLA_3.properties['state'] == 'attacking'  and  BEK_MIKOLA_3.properties['target'] != '' and BEK_MIKOLA_3.actions.check_destroyed(objects=self.objects,  attacker=BEK_MIKOLA_3, target=BEK_MIKOLA_3.properties['target'], min_distance=5, probability=BEK_MIKOLA_3.properties['probability'], time_in_seconds=self.second_in_iteration) and SHIP_ROGOV_1.properties['state'] in ['destroyed']"
        },
        {
            "id": "",
            "interaction_type": "check_destroyed",
            "response_action": "",
            "response_set_values": "BEK_MIKOLA_3.properties['state'] = 'destroyed_bek'",
            "source_object_id": "BEK_MIKOLA_3",
            "title": "БЭК уничтожен",
            "trigger_condition": "BEK_MIKOLA_3.properties['state'] in ['destroyed']"
        },
        {
            "id": "",
            "interaction_type": "search",
            "response_action": "Model_00.actions.fox_rabbit(lat1=BEK_MIKOLA_3.properties['lat'], lon1=BEK_MIKOLA_3.properties['lon'], alt1=BEK_MIKOLA_3.properties['alt'], speed1=BEK_MIKOLA_3.properties['attack_speed'], lat2=SHIP_ROGOV_1.properties['lat'], lon2=SHIP_ROGOV_1.properties['lon'], alt2=SHIP_ROGOV_1.properties['alt'], speed2=SHIP_ROGOV_1.properties['speed'], course2=SHIP_ROGOV_1.properties['course'], dt=100.0) and BEK_MIKOLA_3.properties['geo_path']['geometry']['coordinates'] = BEK_MIKOLA_3.actions.find_path(ship_lat=BEK_MIKOLA_3.properties['lat'], ship_lon=BEK_MIKOLA_3.properties['lon'], target_lat=Model_00.properties['lat'], target_lon=Model_00.properties['lon'], geo_area=Model_00.actions.filter_by_type(objects=self.features, obj_type=\"RESTRICTED_AREA\"));",
            "response_set_values": "",
            "source_object_id": "BEK_MIKOLA_3",
            "title": "Цель обнаружена, расчет точки встречи и вычисление маршрута",
            "trigger_condition": "BEK_MIKOLA_3.properties['state'] in ['finished', 'attacking'] and BEK_MIKOLA_3.properties['target'] != '' and self.iteration_time > BEK_MIKOLA_3.properties['trigger_time']  and BEK_MIKOLA_3.actions.look_detection(item1=BEK_MIKOLA_3, item2=SHIP_ROGOV_1,  rain=WEATHER.properties['rain_intensive'], frog=WEATHER.properties['frog_intensive'], max_distance=BEK_MIKOLA_3.properties['detection_distance'])"
        },
        {
            "id": "",
            "interaction_type": "search",
            "response_action": "",
            "response_set_values": "BEK_MIKOLA_3.properties['trigger_time'] = self.iteration_time + 10; BEK_MIKOLA_3.properties['state'] = 'attacking'; BEK_MIKOLA_3.properties['target'] = 'SHIP_ROGOV_1'; BEK_MIKOLA_3.properties['segment_index'] = 0; BEK_MIKOLA_3.properties['speed'] = BEK_MIKOLA_3.properties['attack_speed'];BEK_MIKOLA_3.properties['geo_path']['geometry']['coordinates'] = BEK_MIKOLA_3.actions.get_variable_path(coordinates=BEK_MIKOLA_3.properties['geo_path']['geometry']['coordinates']); ",
            "source_object_id": "BEK_MIKOLA_3",
            "title": "Построение маршрута с переменным курсом ",
            "trigger_condition": "BEK_MIKOLA_3.properties['state'] in ['finished', 'attacking'] and BEK_MIKOLA_3.properties['target'] != '' and self.iteration_time > BEK_MIKOLA_3.properties['trigger_time']  and BEK_MIKOLA_3.actions.look_detection(item1=BEK_MIKOLA_3, item2=SHIP_ROGOV_1,  rain=WEATHER.properties['rain_intensive'], frog=WEATHER.properties['frog_intensive'], max_distance=BEK_MIKOLA_3.properties['detection_distance'])"
        },
        {
            "id": "",
            "interaction_type": "moving",
            "response_action": "BEK_MIKOLA_3.actions.move(item=BEK_MIKOLA_3,  path=BEK_MIKOLA_3.properties['geo_path'],  time_in_seconds=self.second_in_iteration)",
            "response_set_values": "",
            "source_object_id": "BEK_MIKOLA_3",
            "title": "Движение по маршруту",
            "trigger_condition": "len(BEK_MIKOLA_3.properties['geo_path']['geometry']['coordinates']) > 0 and BEK_MIKOLA_3.properties['state'] in ['moving', 'attacking'] and WEATHER.properties['storm_state'] <= BEK_MIKOLA_3.properties['max_excitement']"
        },
        {
            "id": "",
            "interaction_type": "moving",
            "response_action": "",
            "response_set_values": "SHIP_ROGOV_1.properties['damage_state']='destroyed'",
            "source_object_id": "!BEK!",
            "title": "Объект уничтожен",
            "trigger_condition": "SHIP_ROGOV_1.properties['state'] == 'destroyed' and SHIP_ROGOV_1.properties['damage_state'] != 'destroyed'"
        },
        {
            "id": "",
            "interaction_type": "moving",
            "response_action": "",
            "response_set_values": "SHIP_ROGOV_1.properties['target_list'] =  []",
            "source_object_id": "SHIP_ROGOV_1",
            "title": "",
            "trigger_condition": "CommunicationModel.actions.has_messages(receiver_id=SHIP_ROGOV_1.id, current_time=self.iteration_time) != True"
        },
        {
            "id": "",
            "interaction_type": "moving",
            "response_action": "",
            "response_set_values": "SHIP_ROGOV_1.properties['target_list'] = CommunicationModel.actions.process_messages(receiver_id=SHIP_ROGOV_1.id, current_time=self.iteration_time)",
            "source_object_id": "SHIP_ROGOV_1",
            "title": "Получено сообщение от БПЛА - цель обнаружена ",
            "trigger_condition": "CommunicationModel.actions.has_messages(receiver_id=SHIP_ROGOV_1.id, current_time=self.iteration_time) == True and SHIP_ROGOV_1.properties['state'] != 'destroyed'"
        },
        {
            "id": "",
            "interaction_type": "moving",
            "response_action": "SHIP_ROGOV_1.actions.targeting(target_list=SHIP_ROGOV_1.properties['target_list'], all_items=self.objects, ship=SHIP_ROGOV_1, func_name='', library_name='')",
            "response_set_values": "",
            "source_object_id": "SHIP_ROGOV_1",
            "title": "Целераспределение",
            "trigger_condition": "SHIP_ROGOV_1.properties['target_list'] != []"
        },
        {
            "id": "",
            "interaction_type": "find_path",
            "response_action": "",
            "response_set_values": "SHIP_ROGOV_1.properties['damage_state'] = ''",
            "source_object_id": "SHIP_ROGOV_1",
            "title": "Попадание в носовую часть, снижение прочности корпуса",
            "trigger_condition": "SHIP_ROGOV_1.properties['damage_state'] == 'bow_flash'"
        },
        {
            "id": "",
            "interaction_type": "find_path",
            "response_action": "",
            "response_set_values": "SHIP_ROGOV_1.properties['damage_state']='';SHIP_ROGOV_1.properties['state'] = 'destroyed'",
            "source_object_id": "SHIP_ROGOV_1",
            "title": "Попадание в центральную часть, критическое повреждение корпуса",
            "trigger_condition": "SHIP_ROGOV_1.properties['damage_state'] == 'center_flash'"
        },
        {
            "id": "",
            "interaction_type": "find_path",
            "response_action": "",
            "response_set_values": "SHIP_ROGOV_1.properties['damage_state'] = ''",
            "source_object_id": "SHIP_ROGOV_1",
            "title": "Попадание в кормовую часть, снижение скорости",
            "trigger_condition": "SHIP_ROGOV_1.properties['damage_state'] == 'stern_flash'"
        },
        {
            "id": "",
            "interaction_type": "find_path",
            "response_action": "",
            "response_set_values": "SHIP_ROGOV_1.properties['state'] = 'destroyed'",
            "source_object_id": "SHIP_ROGOV_1",
            "title": "",
            "trigger_condition": "SHIP_ROGOV_1.properties['hull_damage'] >= 1"
        },
        {
            "id": "",
            "interaction_type": "moving",
            "response_action": "",
            "response_set_values": "SHIP_ROGOV_1.properties['damage_state']='destroyed'",
            "source_object_id": "!BEK!",
            "title": "Объект уничтожен",
            "trigger_condition": "SHIP_ROGOV_1.properties['state'] == 'destroyed' and SHIP_ROGOV_1.properties['damage_state'] != 'destroyed'"
        },
        {
            "id": "",
            "interaction_type": "moving",
            "response_action": "SHIP_ROGOV_1.actions.move(item=SHIP_ROGOV_1,  path=SHIP_ROGOV_1.properties['geo_path'],  time_in_seconds=self.second_in_iteration)",
            "response_set_values": "",
            "source_object_id": "SHIP_ROGOV_1",
            "title": "Движение объекта",
            "trigger_condition": "SHIP_ROGOV_1.properties['state'] == 'moving'"
        },
        {
            "id": "",
            "interaction_type": "find_path",
            "response_action": "SHIP_ROGOV_1.properties['geo_path']['geometry']['coordinates'] = SHIP_ROGOV_1.actions.find_path(ship_lat=SHIP_ROGOV_1.properties['lat'], ship_lon=SHIP_ROGOV_1.properties['lon'], target_lat=self.features['DIRECTION_OF_MOVEMENT_1'].coordinates[2][0], target_lon=self.features['DIRECTION_OF_MOVEMENT_1'].coordinates[2][1], geo_area=Model_00.actions.filter_by_type(objects=self.features, obj_type=\"RESTRICTED_AREA\"))",
            "response_set_values": "SHIP_ROGOV_1.properties['state'] = 'moving'",
            "source_object_id": "SHIP_ROGOV_1",
            "title": "Поиск маршрута",
            "trigger_condition": "SHIP_ROGOV_1.properties['state'] == 'standing'"
        }
    ],
    "map_path": "maps/Sochi2/K3704.map",
    "objects": [
        {
            "actions": [
            ],
            "features": [
            ],
            "id": "WEATHER",
            "properties": [
                {
                    "name": "air_temperature",
                    "title": "температура воздуха, градусы цельсия",
                    "type": "float",
                    "value": 20
                },
                {
                    "name": "area",
                    "title": "список координат области",
                    "type": "list",
                    "value": [
                    ]
                },
                {
                    "name": "current_direction",
                    "title": "направление течения в градусах (0-360) относительно севера",
                    "type": "float",
                    "value": 90
                },
                {
                    "name": "current_speed",
                    "title": "скорость течения, м/с",
                    "type": "float",
                    "value": 5
                },
                {
                    "name": "dew_point",
                    "title": "точка росы, градусы цельсия",
                    "type": "float",
                    "value": 5
                },
                {
                    "name": "frog_intensive",
                    "title": "Интенсивность тумана от 0 до 1",
                    "type": "float",
                    "value": 0
                },
                {
                    "name": "humidity",
                    "title": "относительная влажность, в процентах",
                    "type": "float",
                    "value": 20
                },
                {
                    "name": "is_day",
                    "title": "интенсивность естественного/искусственного освещения от 0 до 1",
                    "type": "int",
                    "value": 1
                },
                {
                    "name": "pressure",
                    "title": "давление, миллиметры ртутного столба",
                    "type": "float",
                    "value": 760
                },
                {
                    "name": "rain_intensive",
                    "title": "Интенсивность осадков от 0 до 1",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "sonic_speed_tbl_id",
                    "title": "идентификатор таблицы распределения скорости звука в воде, м/с",
                    "type": "float",
                    "value": 3
                },
                {
                    "name": "storm_state",
                    "title": "Волнение моря",
                    "type": "float",
                    "value": 4
                },
                {
                    "name": "type_object",
                    "title": "",
                    "type": "str",
                    "value": "meteo"
                },
                {
                    "name": "water_temperature",
                    "title": "температура воды, градусы цельсия",
                    "type": "float",
                    "value": 15
                },
                {
                    "name": "wave_direction",
                    "title": "направление волны в градусах (0-360) относительно севера",
                    "type": "float",
                    "value": 0
                },
                {
                    "name": "wave_height",
                    "title": "высота волны, в метрах",
                    "type": "float",
                    "value": 1
                },
                {
                    "name": "wave_period",
                    "title": "период волнения, в секундах",
                    "type": "float",
                    "value": 5
                },
                {
                    "name": "wind_direction",
                    "title": "направление ветра в градусах (0-360) относительно севера",
                    "type": "float",
                    "value": 0
                },
                {
                    "name": "wind_speed",
                    "title": "Cкорость ветра м/с",
                    "type": "float",
                    "value": 7
                }
            ],
            "title": "Гидрометеорологическая обстановка"
        },
        {
            "actions": [
                {
                    "algorithm_id": "alg_id_filter",
                    "name": "Алгоритм фильтра по типу объектов",
                    "output_mapping": [
                    ],
                    "type": "filter_by_type"
                },
                {
                    "algorithm_id": "alg_id_fox_rabbit",
                    "name": "Алгоритма расчета точки встречи",
                    "output_mapping": [
                        {
                            "alt": "_alt",
                            "title": ""
                        },
                        {
                            "is_caught": "_is_caught",
                            "title": ""
                        },
                        {
                            "lat": "_lat",
                            "title": ""
                        },
                        {
                            "lon": "_lon",
                            "title": ""
                        }
                    ],
                    "type": "fox_rabbit"
                },
                {
                    "algorithm_id": "alg_id_object_in_rog",
                    "name": "Находится  ли объект в РОЖ",
                    "output_mapping": [
                    ],
                    "type": "object_in_rog"
                },
                {
                    "algorithm_id": "alg_id_get_waiting_time",
                    "name": "Получение времени ожидания в РОЖ",
                    "output_mapping": [
                    ],
                    "type": "get_waiting_time"
                },
                {
                    "algorithm_id": "alg_id_get_object_prop",
                    "name": "Получение свойства объекта",
                    "output_mapping": [
                    ],
                    "type": "get_object_prop"
                },
                {
                    "algorithm_id": "alg_id_set_object_prop",
                    "name": "Установить значение объекта",
                    "output_mapping": [
                    ],
                    "type": "set_object_prop"
                },
                {
                    "algorithm_id": "alg_id_get_object_by_id",
                    "name": "Получение объекта по его ID",
                    "output_mapping": [
                    ],
                    "type": "get_object_by_id"
                },
                {
                    "algorithm_id": "alg_id_inc_object_prop",
                    "name": "Инкремент свойства объекта",
                    "output_mapping": [
                    ],
                    "type": "inc_object_prop"
                },
                {
                    "algorithm_id": "alg_id_shoot_in_object",
                    "name": "Расчет кол-ва поподаний по целе",
                    "output_mapping": [
                    ],
                    "type": "shoot_in_object"
                },
                {
                    "algorithm_id": "alg_get_bpla_search_path",
                    "name": "Расчет маршрута для БПЛА в районе поиска (зоне разведки)",
                    "output_mapping": [
                    ],
                    "type": "get_bpla_search_path"
                }
            ],
            "features": [
            ],
            "id": "Model_00",
            "properties": [
                {
                    "name": "alt",
                    "title": "",
                    "type": "float",
                    "value": 0
                },
                {
                    "name": "current_iteration",
                    "title": "",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "elapsed_time_in_sec",
                    "title": "",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "is_caught",
                    "title": "",
                    "type": "int",
                    "value": -1
                },
                {
                    "name": "lat",
                    "title": "",
                    "type": "float",
                    "value": 0
                },
                {
                    "name": "lon",
                    "title": "",
                    "type": "float",
                    "value": 37.504
                },
                {
                    "name": "point_exists",
                    "title": "",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "time_per_sec",
                    "title": "",
                    "type": "int",
                    "value": 1
                },
                {
                    "name": "tmp_bool",
                    "title": "",
                    "type": "bool",
                    "value": false
                },
                {
                    "name": "tmp_float",
                    "title": "",
                    "type": "float",
                    "value": 0
                },
                {
                    "name": "tmp_int",
                    "title": "",
                    "type": "int",
                    "value": 0
                }
            ],
            "title": "Среда взаимодействия"
        },
        {
            "actions": [
                {
                    "algorithm_id": "alg_id_path",
                    "name": "Движения по маршруту",
                    "output_mapping": [
                        {
                            "course": "new_course",
                            "title": ""
                        },
                        {
                            "lat": "new_lat",
                            "title": ""
                        },
                        {
                            "lon": "new_lon",
                            "title": ""
                        },
                        {
                            "segment_index": "new_segment_index",
                            "title": ""
                        },
                        {
                            "state": "new_state",
                            "title": ""
                        }
                    ],
                    "type": "move"
                },
                {
                    "algorithm_id": "alg_id_calculate_path",
                    "name": "Расчет маршрута по графу видимости",
                    "output_mapping": [
                        {
                            "geo_path.geometry.coordinates": "new_geo_path",
                            "title": ""
                        }
                    ],
                    "type": "find_path"
                },
                {
                    "algorithm_id": "alg_id_look_detection",
                    "name": "Алгоритм обнаружения объектов противника",
                    "output_mapping": [
                    ],
                    "type": "look_detection"
                },
                {
                    "algorithm_id": "alg_id_check_destroyed",
                    "name": "Провека уничтожения объекта",
                    "output_mapping": [
                    ],
                    "type": "check_destroyed"
                },
                {
                    "algorithm_id": "alg_id_evasive_maneuver",
                    "name": "Маневр уклонения - бегство",
                    "output_mapping": [
                    ],
                    "type": "evrasive_maneuvr"
                },
                {
                    "algorithm_id": "alg_get_variable_path",
                    "name": "Построение маршрута с переменным курсом",
                    "output_mapping": [
                    ],
                    "type": "get_variable_path"
                }
            ],
            "features": [
            ],
            "id": "BEK_MIKOLA_1",
            "properties": [
                {
                    "name": "alt",
                    "title": "координаты - высота над уровнем моря, м",
                    "type": "float",
                    "value": 0
                },
                {
                    "name": "angle_view",
                    "title": "угол обзора ОЭС, градусы",
                    "type": "int",
                    "value": 360
                },
                {
                    "name": "attack_speed",
                    "title": "скорость развиваемая при атаке, м/с",
                    "type": "int",
                    "value": 23
                },
                {
                    "name": "class_code",
                    "title": "класскод",
                    "type": "str",
                    "value": "P0040062"
                },
                {
                    "name": "connect_dist",
                    "title": "удаление от пункта управления, м",
                    "type": "int",
                    "value": 400000
                },
                {
                    "name": "course",
                    "title": "курс",
                    "type": "float",
                    "value": 41.19533609300449
                },
                {
                    "name": "detection_distance",
                    "title": "дистанция обнаружения",
                    "type": "int",
                    "value": 20000
                },
                {
                    "name": "distance_of_defeat",
                    "title": "дистанция поражения",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "geo_path",
                    "title": "маршрут",
                    "type": "feature",
                    "value": {
                        "geometry": {
                            "coordinates": [
                            ],
                            "type": "LineString"
                        },
                        "properties": {
                            "class_code": "131405000210000000",
                            "id": "BEK_MIKOLA_1_path"
                        },
                        "type": "Feature"
                    }
                },
                {
                    "name": "height",
                    "title": "высота, м",
                    "type": "float",
                    "value": 1.2
                },
                {
                    "name": "hit_count",
                    "title": "текущее количество попаданий по корпусу",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "hull_damage",
                    "title": "текущее повреждений корпуса",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "image",
                    "title": "иконка",
                    "type": "str",
                    "value": "бэк-red.png"
                },
                {
                    "name": "is_own",
                    "title": "синий/красный",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "lat",
                    "title": "координаты - широта",
                    "type": "float",
                    "value": 43.63394999140308
                },
                {
                    "name": "length",
                    "title": "длина, м",
                    "type": "float",
                    "value": 3.5
                },
                {
                    "name": "lon",
                    "title": "координаты - долгота",
                    "type": "float",
                    "value": 39.54427103694087
                },
                {
                    "name": "mass",
                    "title": "вес взрывчатого вещества, кг",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "max_excitement",
                    "title": "Допустимое волнение, баллы",
                    "type": "float",
                    "value": 5
                },
                {
                    "name": "max_hit_count",
                    "title": "критическое кол-во попаданий по корпусу, до выхода из строя",
                    "type": "int",
                    "value": 5
                },
                {
                    "name": "probability",
                    "title": "вероятность попадания в противника",
                    "type": "float",
                    "value": 0.33
                },
                {
                    "name": "restriction",
                    "title": "ограничения мореходности, Б",
                    "type": "int",
                    "value": 3
                },
                {
                    "name": "rocket_count",
                    "title": "кол-во крылатых ракет",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "segment_index",
                    "title": "индекс сегмента маршрута",
                    "type": "int",
                    "value": -1
                },
                {
                    "name": "speed",
                    "title": "крейсерская скорость, м/с",
                    "type": "float",
                    "value": 3
                },
                {
                    "name": "state",
                    "title": "состояние",
                    "type": "str",
                    "value": "standing"
                },
                {
                    "name": "subType",
                    "title": "подтип",
                    "type": "str",
                    "value": "Камикадзе"
                },
                {
                    "name": "target",
                    "title": "идентификатор цели",
                    "type": "str",
                    "value": ""
                },
                {
                    "name": "trigger_time",
                    "title": "отладочное поле",
                    "type": "float",
                    "value": 0
                },
                {
                    "name": "type",
                    "title": "тип",
                    "type": "str",
                    "value": "БЭК"
                },
                {
                    "name": "type_connect",
                    "title": "связь",
                    "type": "str",
                    "value": "Starlink"
                },
                {
                    "name": "waiting_time",
                    "title": "время ожидания в РОЖ",
                    "type": "float",
                    "value": 0
                },
                {
                    "name": "width",
                    "title": "ширина, м",
                    "type": "float",
                    "value": 0.9
                }
            ],
            "title": "БЭК «Микола» №1"
        },
        {
            "actions": [
                {
                    "algorithm_id": "alg_id_path",
                    "name": "Движения по маршруту",
                    "output_mapping": [
                        {
                            "course": "new_course",
                            "title": ""
                        },
                        {
                            "lat": "new_lat",
                            "title": ""
                        },
                        {
                            "lon": "new_lon",
                            "title": ""
                        },
                        {
                            "segment_index": "new_segment_index",
                            "title": ""
                        },
                        {
                            "state": "new_state",
                            "title": ""
                        }
                    ],
                    "type": "move"
                },
                {
                    "algorithm_id": "alg_id_calculate_path",
                    "name": "Расчет маршрута по графу видимости",
                    "output_mapping": [
                        {
                            "geo_path.geometry.coordinates": "new_geo_path",
                            "title": ""
                        }
                    ],
                    "type": "find_path"
                },
                {
                    "algorithm_id": "alg_id_look_detection",
                    "name": "Алгоритм обнаружения объектов противника",
                    "output_mapping": [
                    ],
                    "type": "look_detection"
                },
                {
                    "algorithm_id": "alg_id_check_destroyed",
                    "name": "Провека уничтожения объекта",
                    "output_mapping": [
                    ],
                    "type": "check_destroyed"
                },
                {
                    "algorithm_id": "alg_id_evasive_maneuver",
                    "name": "Маневр уклонения - бегство",
                    "output_mapping": [
                    ],
                    "type": "evrasive_maneuvr"
                },
                {
                    "algorithm_id": "alg_get_variable_path",
                    "name": "Построение маршрута с переменным курсом",
                    "output_mapping": [
                    ],
                    "type": "get_variable_path"
                }
            ],
            "features": [
            ],
            "id": "BEK_MIKOLA_2",
            "properties": [
                {
                    "name": "alt",
                    "title": "координаты - высота над уровнем моря, м",
                    "type": "float",
                    "value": 0
                },
                {
                    "name": "angle_view",
                    "title": "угол обзора ОЭС, градусы",
                    "type": "int",
                    "value": 360
                },
                {
                    "name": "attack_speed",
                    "title": "скорость развиваемая при атаке, м/с",
                    "type": "int",
                    "value": 23
                },
                {
                    "name": "class_code",
                    "title": "класскод",
                    "type": "str",
                    "value": "P0040062"
                },
                {
                    "name": "connect_dist",
                    "title": "удаление от пункта управления, м",
                    "type": "int",
                    "value": 400000
                },
                {
                    "name": "course",
                    "title": "курс",
                    "type": "float",
                    "value": 329.516118158488
                },
                {
                    "name": "detection_distance",
                    "title": "дистанция обнаружения",
                    "type": "int",
                    "value": 20000
                },
                {
                    "name": "distance_of_defeat",
                    "title": "дистанция поражения",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "geo_path",
                    "title": "маршрут",
                    "type": "feature",
                    "value": {
                        "geometry": {
                            "coordinates": [
                            ],
                            "type": "LineString"
                        },
                        "properties": {
                            "class_code": "131405000210000000",
                            "id": "BEK_MIKOLA_2_path"
                        },
                        "type": "Feature"
                    }
                },
                {
                    "name": "height",
                    "title": "высота, м",
                    "type": "float",
                    "value": 1.2
                },
                {
                    "name": "hit_count",
                    "title": "текущее количество попаданий по корпусу",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "hull_damage",
                    "title": "текущее повреждений корпуса",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "image",
                    "title": "иконка",
                    "type": "str",
                    "value": "бэк-red.png"
                },
                {
                    "name": "is_own",
                    "title": "синий/красный",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "lat",
                    "title": "координаты - широта",
                    "type": "float",
                    "value": 43.64311809074686
                },
                {
                    "name": "length",
                    "title": "длина, м",
                    "type": "float",
                    "value": 3.5
                },
                {
                    "name": "lon",
                    "title": "координаты - долгота",
                    "type": "float",
                    "value": 39.56732269201519
                },
                {
                    "name": "mass",
                    "title": "вес взрывчатого вещества, кг",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "max_excitement",
                    "title": "Допустимое волнение, баллы",
                    "type": "float",
                    "value": 5
                },
                {
                    "name": "max_hit_count",
                    "title": "критическое кол-во попаданий по корпусу, до выхода из строя",
                    "type": "int",
                    "value": 5
                },
                {
                    "name": "probability",
                    "title": "вероятность попадания в противника",
                    "type": "float",
                    "value": 0.33
                },
                {
                    "name": "restriction",
                    "title": "ограничения мореходности, Б",
                    "type": "int",
                    "value": 3
                },
                {
                    "name": "rocket_count",
                    "title": "кол-во крылатых ракет",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "segment_index",
                    "title": "индекс сегмента маршрута",
                    "type": "int",
                    "value": -1
                },
                {
                    "name": "speed",
                    "title": "крейсерская скорость, м/с",
                    "type": "float",
                    "value": 3
                },
                {
                    "name": "state",
                    "title": "состояние",
                    "type": "str",
                    "value": "standing"
                },
                {
                    "name": "subType",
                    "title": "подтип",
                    "type": "str",
                    "value": "Камикадзе"
                },
                {
                    "name": "target",
                    "title": "идентификатор цели",
                    "type": "str",
                    "value": ""
                },
                {
                    "name": "trigger_time",
                    "title": "отладочное поле",
                    "type": "float",
                    "value": 0
                },
                {
                    "name": "type",
                    "title": "тип",
                    "type": "str",
                    "value": "БЭК"
                },
                {
                    "name": "type_connect",
                    "title": "связь",
                    "type": "str",
                    "value": "Starlink"
                },
                {
                    "name": "waiting_time",
                    "title": "время ожидания в РОЖ",
                    "type": "float",
                    "value": 0
                },
                {
                    "name": "width",
                    "title": "ширина, м",
                    "type": "float",
                    "value": 0.9
                }
            ],
            "title": "БЭК «Микола» №2"
        },
        {
            "actions": [
                {
                    "algorithm_id": "alg_id_path",
                    "name": "Движения по маршруту",
                    "output_mapping": [
                        {
                            "course": "new_course",
                            "title": ""
                        },
                        {
                            "lat": "new_lat",
                            "title": ""
                        },
                        {
                            "lon": "new_lon",
                            "title": ""
                        },
                        {
                            "segment_index": "new_segment_index",
                            "title": ""
                        },
                        {
                            "state": "new_state",
                            "title": ""
                        }
                    ],
                    "type": "move"
                },
                {
                    "algorithm_id": "alg_id_calculate_path",
                    "name": "Расчет маршрута по графу видимости",
                    "output_mapping": [
                        {
                            "geo_path.geometry.coordinates": "new_geo_path",
                            "title": ""
                        }
                    ],
                    "type": "find_path"
                },
                {
                    "algorithm_id": "alg_id_look_detection",
                    "name": "Алгоритм обнаружения объектов противника",
                    "output_mapping": [
                    ],
                    "type": "look_detection"
                },
                {
                    "algorithm_id": "alg_id_check_destroyed",
                    "name": "Провека уничтожения объекта",
                    "output_mapping": [
                    ],
                    "type": "check_destroyed"
                },
                {
                    "algorithm_id": "alg_id_evasive_maneuver",
                    "name": "Маневр уклонения - бегство",
                    "output_mapping": [
                    ],
                    "type": "evrasive_maneuvr"
                },
                {
                    "algorithm_id": "alg_get_variable_path",
                    "name": "Построение маршрута с переменным курсом",
                    "output_mapping": [
                    ],
                    "type": "get_variable_path"
                }
            ],
            "features": [
            ],
            "id": "BEK_MIKOLA_3",
            "properties": [
                {
                    "name": "alt",
                    "title": "координаты - высота над уровнем моря, м",
                    "type": "float",
                    "value": 0
                },
                {
                    "name": "angle_view",
                    "title": "угол обзора ОЭС, градусы",
                    "type": "int",
                    "value": 360
                },
                {
                    "name": "attack_speed",
                    "title": "скорость развиваемая при атаке, м/с",
                    "type": "int",
                    "value": 23
                },
                {
                    "name": "class_code",
                    "title": "класскод",
                    "type": "str",
                    "value": "P0040062"
                },
                {
                    "name": "connect_dist",
                    "title": "удаление от пункта управления, м",
                    "type": "int",
                    "value": 400000
                },
                {
                    "name": "course",
                    "title": "курс",
                    "type": "float",
                    "value": 148.0006315959001
                },
                {
                    "name": "detection_distance",
                    "title": "дистанция обнаружения",
                    "type": "int",
                    "value": 20000
                },
                {
                    "name": "distance_of_defeat",
                    "title": "дистанция поражения",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "geo_path",
                    "title": "маршрут",
                    "type": "feature",
                    "value": {
                        "geometry": {
                            "coordinates": [
                            ],
                            "type": "LineString"
                        },
                        "properties": {
                            "class_code": "131405000210000000",
                            "id": "BEK_MIKOLA_3_path"
                        },
                        "type": "Feature"
                    }
                },
                {
                    "name": "height",
                    "title": "высота, м",
                    "type": "float",
                    "value": 1.2
                },
                {
                    "name": "hit_count",
                    "title": "текущее количество попаданий по корпусу",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "hull_damage",
                    "title": "текущее повреждений корпуса",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "image",
                    "title": "иконка",
                    "type": "str",
                    "value": "бэк-red.png"
                },
                {
                    "name": "is_own",
                    "title": "синий/красный",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "lat",
                    "title": "координаты - широта",
                    "type": "float",
                    "value": 43.65569316888186
                },
                {
                    "name": "length",
                    "title": "длина, м",
                    "type": "float",
                    "value": 3.5
                },
                {
                    "name": "lon",
                    "title": "координаты - долгота",
                    "type": "float",
                    "value": 39.55688209335484
                },
                {
                    "name": "mass",
                    "title": "вес взрывчатого вещества, кг",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "max_excitement",
                    "title": "Допустимое волнение, баллы",
                    "type": "float",
                    "value": 5
                },
                {
                    "name": "max_hit_count",
                    "title": "критическое кол-во попаданий по корпусу, до выхода из строя",
                    "type": "int",
                    "value": 5
                },
                {
                    "name": "probability",
                    "title": "вероятность попадания в противника",
                    "type": "float",
                    "value": 0.33
                },
                {
                    "name": "restriction",
                    "title": "ограничения мореходности, Б",
                    "type": "int",
                    "value": 3
                },
                {
                    "name": "rocket_count",
                    "title": "кол-во крылатых ракет",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "segment_index",
                    "title": "индекс сегмента маршрута",
                    "type": "int",
                    "value": -1
                },
                {
                    "name": "speed",
                    "title": "крейсерская скорость, м/с",
                    "type": "float",
                    "value": 3
                },
                {
                    "name": "state",
                    "title": "состояние",
                    "type": "str",
                    "value": "standing"
                },
                {
                    "name": "subType",
                    "title": "подтип",
                    "type": "str",
                    "value": "Камикадзе"
                },
                {
                    "name": "target",
                    "title": "идентификатор цели",
                    "type": "str",
                    "value": ""
                },
                {
                    "name": "trigger_time",
                    "title": "отладочное поле",
                    "type": "float",
                    "value": 0
                },
                {
                    "name": "type",
                    "title": "тип",
                    "type": "str",
                    "value": "БЭК"
                },
                {
                    "name": "type_connect",
                    "title": "связь",
                    "type": "str",
                    "value": "Starlink"
                },
                {
                    "name": "waiting_time",
                    "title": "время ожидания в РОЖ",
                    "type": "float",
                    "value": 0
                },
                {
                    "name": "width",
                    "title": "ширина, м",
                    "type": "float",
                    "value": 0.9
                }
            ],
            "title": "БЭК «Микола» №3"
        },
        {
            "actions": [
                {
                    "algorithm_id": "ald_id_update_link_status",
                    "name": "Обновление линии связи",
                    "output_mapping": [
                    ],
                    "type": "update_link_status"
                },
                {
                    "algorithm_id": "ald_id_send_message",
                    "name": "Отправка сообщения",
                    "output_mapping": [
                    ],
                    "type": "send_message"
                },
                {
                    "algorithm_id": "ald_id_process_messages",
                    "name": "Прием сообщения",
                    "output_mapping": [
                    ],
                    "type": "process_messages"
                },
                {
                    "algorithm_id": "ald_id_get_line_list",
                    "name": "Список соединений",
                    "output_mapping": [
                    ],
                    "type": "get_line_list"
                },
                {
                    "algorithm_id": "ald_id_has_messages",
                    "name": "Проверка наличия сообщений",
                    "output_mapping": [
                    ],
                    "type": "has_messages"
                },
                {
                    "algorithm_id": "ald_id_draw_line",
                    "name": "Отображение линии связи",
                    "output_mapping": [
                    ],
                    "type": "draw_line"
                },
                {
                    "algorithm_id": "ald_id_draw_line",
                    "name": "Отображение линии связи",
                    "output_mapping": [
                    ],
                    "type": "link_status"
                }
            ],
            "features": [
            ],
            "id": "CommunicationModel",
            "properties": [
                {
                    "name": "connection_list",
                    "title": "Список объектов между которыми есть связь",
                    "type": "list",
                    "value": [
                    ]
                },
                {
                    "name": "is_own",
                    "title": "синий/красный",
                    "type": "int",
                    "value": 1
                },
                {
                    "name": "subtype",
                    "title": "подтип",
                    "type": "str",
                    "value": "Модель связи"
                },
                {
                    "name": "type",
                    "title": "тип",
                    "type": "str",
                    "value": "Модель связи"
                }
            ],
            "title": "Модель связи №1"
        },
        {
            "actions": [
                {
                    "algorithm_id": "alg_id_path",
                    "name": "Движения по маршруту",
                    "output_mapping": [
                        {
                            "course": "new_course",
                            "title": ""
                        },
                        {
                            "lat": "new_lat",
                            "title": ""
                        },
                        {
                            "lon": "new_lon",
                            "title": ""
                        },
                        {
                            "segment_index": "new_segment_index",
                            "title": ""
                        },
                        {
                            "state": "new_state",
                            "title": ""
                        }
                    ],
                    "type": "move"
                },
                {
                    "algorithm_id": "alg_id_calculate_path",
                    "name": "Расчет маршрута по графу видимости",
                    "output_mapping": [
                        {
                            "geo_path.geometry.coordinates": "new_geo_path",
                            "title": ""
                        }
                    ],
                    "type": "find_path"
                },
                {
                    "algorithm_id": "alg_id_detect_thermal_imager",
                    "name": "Алгоритм обнаружения объектов противника на заданном радиусе",
                    "output_mapping": [
                    ],
                    "type": "search"
                },
                {
                    "algorithm_id": "alg_id_detect_enemy",
                    "name": "Получение id вражеского объекта в радиусе определенной дистанции.",
                    "output_mapping": [
                    ],
                    "type": "detect_enemy"
                },
                {
                    "algorithm_id": "alg_id_calc_effect_air",
                    "name": "Алгоритм Расчета эффективности поражения (пулеметом или АК)",
                    "output_mapping": [
                    ],
                    "type": "ak_attack"
                },
                {
                    "algorithm_id": "alg_id_evasive_maneuver",
                    "name": "Маневр уклонения - бегство",
                    "output_mapping": [
                    ],
                    "type": "evasive_maneuver"
                },
                {
                    "algorithm_id": "alg_id_targeting",
                    "name": "Алгоритм целераспределения",
                    "output_mapping": [
                    ],
                    "type": "targeting"
                }
            ],
            "features": [
            ],
            "id": "SHIP_ROGOV_1",
            "properties": [
                {
                    "name": "ak_bullet_count",
                    "title": "боезапас патронов в АК",
                    "type": "int",
                    "value": 10000
                },
                {
                    "name": "ak_bullet_per_second",
                    "title": "расход патронов в АК в секунду",
                    "type": "int",
                    "value": 100
                },
                {
                    "name": "ak_distance",
                    "title": "эффективная дистанция поражения, м",
                    "type": "int",
                    "value": 2000
                },
                {
                    "name": "ak_spread_horizontal",
                    "title": "разброс по горизонтали на 100м",
                    "type": "float",
                    "value": 0.37
                },
                {
                    "name": "ak_spread_vertical",
                    "title": "разброс по вертикали на 100м",
                    "type": "float",
                    "value": 0.57
                },
                {
                    "name": "alt",
                    "title": "координаты - высота над уровнем моря, м",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "bandwidth_khz",
                    "title": "Приемник - ширина полосы приема, кГц",
                    "type": "int",
                    "value": 20000
                },
                {
                    "name": "class_code",
                    "title": "класскод",
                    "type": "str",
                    "value": "131472600009"
                },
                {
                    "name": "course",
                    "title": "курс",
                    "type": "float",
                    "value": 136.9605181260117
                },
                {
                    "name": "damage_state",
                    "title": "тип повреждения",
                    "type": "str",
                    "value": ""
                },
                {
                    "name": "danger_distance",
                    "title": "мин дистанция при которой начинается маневр уклонения",
                    "type": "int",
                    "value": 20000
                },
                {
                    "name": "geo_path",
                    "title": "маршрут",
                    "type": "feature",
                    "value": {
                        "geometry": {
                            "coordinates": [
                            ],
                            "type": "LineString"
                        },
                        "properties": {
                            "class_code": "131405000210000000",
                            "id": "SHIP_ROGOV_1_path"
                        },
                        "type": "Feature"
                    }
                },
                {
                    "name": "gr_lin",
                    "title": "Приемник - усиление",
                    "type": "float",
                    "value": 2
                },
                {
                    "name": "hull_damage",
                    "title": "текущее повреждений корпуса",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "image",
                    "title": "иконка",
                    "type": "str",
                    "value": "ship-blue.png"
                },
                {
                    "name": "is_own",
                    "title": "синий/красный",
                    "type": "int",
                    "value": 1
                },
                {
                    "name": "lat",
                    "title": "координаты - широта",
                    "type": "float",
                    "value": 43.65422485639531
                },
                {
                    "name": "lon",
                    "title": "координаты - долгота",
                    "type": "float",
                    "value": 39.55826786839968
                },
                {
                    "name": "noise_figure_db",
                    "title": "Приемник - шумовой коэффициент дБ",
                    "type": "float",
                    "value": 3
                },
                {
                    "name": "segment_index",
                    "title": "индекс сегмента маршрута",
                    "type": "int",
                    "value": 0
                },
                {
                    "name": "speed",
                    "title": "крейсерская скорость",
                    "type": "float",
                    "value": 9.6
                },
                {
                    "name": "speed_maneuver",
                    "title": "скорость при выполнении маневра",
                    "type": "float",
                    "value": 20
                },
                {
                    "name": "state",
                    "title": "состояние",
                    "type": "str",
                    "value": "standing"
                },
                {
                    "name": "subType",
                    "title": "подтип объекта",
                    "type": "str",
                    "value": "УДК"
                },
                {
                    "name": "target",
                    "title": "идентификатор цели АК",
                    "type": "str",
                    "value": ""
                },
                {
                    "name": "target_list",
                    "title": "Список целей для атаки",
                    "type": "list",
                    "value": [
                    ]
                },
                {
                    "name": "type",
                    "title": "тип",
                    "type": "str",
                    "value": "Надводные корабли"
                }
            ],
            "title": "«Иван Рогов» пр 23900 №1"
        }
    ],
    "scenario_id": "05 Отработка места атаки бэк корабль",
    "simulation_parameters": {
        "end_condition": "SHIP_ROGOV_1.properties['state'] == 'destroyed'",
        "map_center": "43.60444, 39.55487",
        "map_zoom": 6,
        "max_iterations": 100000,
        "time_step": 1
    },
    "version": 1
}
